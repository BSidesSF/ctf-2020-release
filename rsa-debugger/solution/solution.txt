From RSA debugger:

RSA debugger> holdmsg
Holding message...found a message to hold!
Target plaintext derived.
RSA debugger> printmsg
Held Message: 24767152779036719536817785271481924005723054911184966105836399790329035126121200382403238208561233055242018084731856844750946116670238780443501776610431030051425445327678779428430337505286393589219017726041694198398514510136328072877526478286027483960093470941803622620495237218518082698459824902886001929252753905383977346542414505576706431996670624074213062962476840024240941159312531262366799022395694733776252406133687631320161021354926634750606196629758783063939457720789782654189619651209088744319237332590838819251759200273603803981460157180441380826968958385678440398525049830235290159011301963967635950516687

RSA debugger> printtarget
Target plaintext for held message: 52218557622655182058721298410128724497736237107858961398752582948746717509543923532995392133766377362569698151865611




GP/PARI> candidatep(b,l) = {my(p); p = 2; while(log(p)/log(2) < b, p = p * nextprime(random(l))); p + 1;}
GP/PARI> divisiblep(b,l) = {my(p); p = 1; while(isprime(p) != 1, p = candidatep(b,l)); p}
GP/PARI> q = 2
GP/PARI> c = 24767152779036719536817785271481924005723054911184966105836399790329035126121200382403238208561233055242018084731856844750946116670238780443501776610431030051425445327678779428430337505286393589219017726041694198398514510136328072877526478286027483960093470941803622620495237218518082698459824902886001929252753905383977346542414505576706431996670624074213062962476840024240941159312531262366799022395694733776252406133687631320161021354926634750606196629758783063939457720789782654189619651209088744319237332590838819251759200273603803981460157180441380826968958385678440398525049830235290159011301963967635950516687
GP/PARI> m = 52218557622655182058721298410128724497736237107858961398752582948746717509543923532995392133766377362569698151865611
GP/PARI> g = 2; while(g != 1, p = divisiblep(2060, 1000000); addprimes(p); d = znlog(m, Mod(c, p * q)); g = gcd(d, p - 1);)
GP/PARI> e = lift(Mod(1/d, (p - 1) * (q - 1)))
GP/PARI> print(p)

GP/PARI> print(e)



RSA debugger> setp

RSA debugger> setq 2

RSA debugger> sete

RSA debugger> printkey
Current key parameters:
 p: 14634668755105034234807437770706578598886696485257346213115932764494495943003581763198456047338465605526004149629532981871867429940600088918464289331052564688829627781681712244816808168599293015181203100699290192344384530956054746628146471402038788626680789846623346842177268087870462801172171831702142374958562243556223207502150397485365440345421795218275482352910247418742893093395307661740535893399928594983550602722908223214902014769434397202409278163198348492804366985851089271067468647212613843709463797925433688515141170484539387588147803384232787997840927464508201456815932386017941757812046241235158702333755159239
 q: 2
 derived n: 29269337510210068469614875541413157197773392970514692426231865528988991886007163526396912094676931211052008299259065963743734859881200177836928578662105129377659255563363424489633616337198586030362406201398580384688769061912109493256292942804077577253361579693246693684354536175740925602344343663404284749917124487112446415004300794970730880690843590436550964705820494837485786186790615323481071786799857189967101205445816446429804029538868794404818556326396696985608733971702178542134937294425227687418927595850867377030282340969078775176295606768465575995681854929016402913631864772035883515624092482470317404667510318478
 e: 12296734388514891684761887905841394444867471358782916652182416302540691239728369917709763287393825810910971406431347586136113343709194831916595258584149838762266966892299533300829131399126380163298380060427055952712289621409851813855918800447422765453395502358332779064961202116231905397533464538202519689497387765210457841565069917458584059890836662796763972581292927899270555848792880962499174830682991115577197989292777268780391506043472691679040125319495999272877784635861607698080797154737497628661822030618907434157232922037907445906718421061756291106581546173029595901418591569865820478419033013804710381674926448015
 derived d: 5848930273091753390136205470814241359943740160900265541207786397001388757218982341616297930409529511278206031529086488412983399895845184638357103320924482589653604273183644486177312557495071681597276536279056274703902185566439549117203734919665075320453607086969499978478173695578826027012844432726883087387887864119790139813169607055761774838361952451761502432927974856652071961548120545934929304906397497792509607017884185274060584033122120625537933493116997277147384109781514299829721939966295550290438814838163088906157959333635427583893531539946979407497526049480751981576779793390501842401910997635905460237572435481

RSA debugger> testdecrypt
Message decrypted to: 52218557622655182058721298410128724497736237107858961398752582948746717509543923532995392133766377362569698151865611

RSA debugger> attack
Satellite response: CTF{curveball_not_just_for_ecc}
